ParseOk (Module (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 1, srcSpanStartColumn = 1, srcSpanEndLine = 13, srcSpanEndColumn = 1}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 1, srcSpanStartColumn = 1, srcSpanEndLine = 1, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 2, srcSpanStartColumn = 1, srcSpanEndLine = 2, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 2, srcSpanStartColumn = 1, srcSpanEndLine = 2, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 4, srcSpanStartColumn = 1, srcSpanEndLine = 4, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 5, srcSpanStartColumn = 1, srcSpanEndLine = 5, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 7, srcSpanStartColumn = 1, srcSpanEndLine = 7, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 8, srcSpanStartColumn = 1, srcSpanEndLine = 8, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 13, srcSpanStartColumn = 1, srcSpanEndLine = 13, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 13, srcSpanStartColumn = 1, srcSpanEndLine = 13, srcSpanEndColumn = 1}]}) (Just (ModuleHead (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 2, srcSpanStartColumn = 1, srcSpanEndLine = 2, srcSpanEndColumn = 26}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 2, srcSpanStartColumn = 1, srcSpanEndLine = 2, srcSpanEndColumn = 7},SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 2, srcSpanStartColumn = 21, srcSpanEndLine = 2, srcSpanEndColumn = 26}]}) (ModuleName (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 2, srcSpanStartColumn = 8, srcSpanEndLine = 2, srcSpanEndColumn = 20}, srcInfoPoints = []}) "DoubleHashOp") Nothing Nothing)) [LanguagePragma (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 1, srcSpanStartColumn = 1, srcSpanEndLine = 1, srcSpanEndColumn = 31}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 1, srcSpanStartColumn = 1, srcSpanEndLine = 1, srcSpanEndColumn = 13},SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 1, srcSpanStartColumn = 28, srcSpanEndLine = 1, srcSpanEndColumn = 31}]}) [Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 1, srcSpanStartColumn = 14, srcSpanEndLine = 1, srcSpanEndColumn = 27}, srcInfoPoints = []}) "UnboxedTuples"]] [] [TypeSig (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 4, srcSpanStartColumn = 1, srcSpanEndLine = 4, srcSpanEndColumn = 22}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 4, srcSpanStartColumn = 6, srcSpanEndLine = 4, srcSpanEndColumn = 8}]}) [Symbol (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 4, srcSpanStartColumn = 1, srcSpanEndLine = 4, srcSpanEndColumn = 5}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 4, srcSpanStartColumn = 1, srcSpanEndLine = 4, srcSpanEndColumn = 2},SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 4, srcSpanStartColumn = 2, srcSpanEndLine = 4, srcSpanEndColumn = 4},SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 4, srcSpanStartColumn = 4, srcSpanEndLine = 4, srcSpanEndColumn = 5}]}) "##"] (TyFun (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 4, srcSpanStartColumn = 9, srcSpanEndLine = 4, srcSpanEndColumn = 22}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 4, srcSpanStartColumn = 11, srcSpanEndLine = 4, srcSpanEndColumn = 13}]}) (TyVar (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 4, srcSpanStartColumn = 9, srcSpanEndLine = 4, srcSpanEndColumn = 10}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 4, srcSpanStartColumn = 9, srcSpanEndLine = 4, srcSpanEndColumn = 10}, srcInfoPoints = []}) "a")) (TyFun (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 4, srcSpanStartColumn = 14, srcSpanEndLine = 4, srcSpanEndColumn = 22}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 4, srcSpanStartColumn = 16, srcSpanEndLine = 4, srcSpanEndColumn = 18}]}) (TyVar (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 4, srcSpanStartColumn = 14, srcSpanEndLine = 4, srcSpanEndColumn = 15}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 4, srcSpanStartColumn = 14, srcSpanEndLine = 4, srcSpanEndColumn = 15}, srcInfoPoints = []}) "b")) (TyCon (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 4, srcSpanStartColumn = 19, srcSpanEndLine = 4, srcSpanEndColumn = 22}, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 4, srcSpanStartColumn = 19, srcSpanEndLine = 4, srcSpanEndColumn = 22}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 4, srcSpanStartColumn = 19, srcSpanEndLine = 4, srcSpanEndColumn = 22}, srcInfoPoints = []}) "Int"))))),FunBind (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 5, srcSpanStartColumn = 1, srcSpanEndLine = 5, srcSpanEndColumn = 11}, srcInfoPoints = []}) [InfixMatch (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 5, srcSpanStartColumn = 1, srcSpanEndLine = 5, srcSpanEndColumn = 11}, srcInfoPoints = []}) (PVar (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 5, srcSpanStartColumn = 1, srcSpanEndLine = 5, srcSpanEndColumn = 2}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 5, srcSpanStartColumn = 1, srcSpanEndLine = 5, srcSpanEndColumn = 2}, srcInfoPoints = []}) "a")) (Symbol (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 5, srcSpanStartColumn = 3, srcSpanEndLine = 5, srcSpanEndColumn = 5}, srcInfoPoints = []}) "##") [PVar (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 5, srcSpanStartColumn = 6, srcSpanEndLine = 5, srcSpanEndColumn = 7}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 5, srcSpanStartColumn = 6, srcSpanEndLine = 5, srcSpanEndColumn = 7}, srcInfoPoints = []}) "b")] (UnGuardedRhs (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 5, srcSpanStartColumn = 8, srcSpanEndLine = 5, srcSpanEndColumn = 11}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 5, srcSpanStartColumn = 8, srcSpanEndLine = 5, srcSpanEndColumn = 9}]}) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 5, srcSpanStartColumn = 10, srcSpanEndLine = 5, srcSpanEndColumn = 11}, srcInfoPoints = []}) (Int (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 5, srcSpanStartColumn = 10, srcSpanEndLine = 5, srcSpanEndColumn = 11}, srcInfoPoints = []}) 0 "0"))) Nothing],TypeSig (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 7, srcSpanStartColumn = 1, srcSpanEndLine = 7, srcSpanEndColumn = 22}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 7, srcSpanStartColumn = 6, srcSpanEndLine = 7, srcSpanEndColumn = 8}]}) [Symbol (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 7, srcSpanStartColumn = 1, srcSpanEndLine = 7, srcSpanEndColumn = 5}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 7, srcSpanStartColumn = 1, srcSpanEndLine = 7, srcSpanEndColumn = 2},SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 7, srcSpanStartColumn = 2, srcSpanEndLine = 7, srcSpanEndColumn = 4},SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 7, srcSpanStartColumn = 4, srcSpanEndLine = 7, srcSpanEndColumn = 5}]}) "#*"] (TyFun (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 7, srcSpanStartColumn = 9, srcSpanEndLine = 7, srcSpanEndColumn = 22}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 7, srcSpanStartColumn = 11, srcSpanEndLine = 7, srcSpanEndColumn = 13}]}) (TyVar (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 7, srcSpanStartColumn = 9, srcSpanEndLine = 7, srcSpanEndColumn = 10}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 7, srcSpanStartColumn = 9, srcSpanEndLine = 7, srcSpanEndColumn = 10}, srcInfoPoints = []}) "a")) (TyFun (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 7, srcSpanStartColumn = 14, srcSpanEndLine = 7, srcSpanEndColumn = 22}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 7, srcSpanStartColumn = 16, srcSpanEndLine = 7, srcSpanEndColumn = 18}]}) (TyVar (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 7, srcSpanStartColumn = 14, srcSpanEndLine = 7, srcSpanEndColumn = 15}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 7, srcSpanStartColumn = 14, srcSpanEndLine = 7, srcSpanEndColumn = 15}, srcInfoPoints = []}) "b")) (TyCon (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 7, srcSpanStartColumn = 19, srcSpanEndLine = 7, srcSpanEndColumn = 22}, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 7, srcSpanStartColumn = 19, srcSpanEndLine = 7, srcSpanEndColumn = 22}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 7, srcSpanStartColumn = 19, srcSpanEndLine = 7, srcSpanEndColumn = 22}, srcInfoPoints = []}) "Int"))))),FunBind (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 8, srcSpanStartColumn = 1, srcSpanEndLine = 8, srcSpanEndColumn = 11}, srcInfoPoints = []}) [InfixMatch (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 8, srcSpanStartColumn = 1, srcSpanEndLine = 8, srcSpanEndColumn = 11}, srcInfoPoints = []}) (PVar (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 8, srcSpanStartColumn = 1, srcSpanEndLine = 8, srcSpanEndColumn = 2}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 8, srcSpanStartColumn = 1, srcSpanEndLine = 8, srcSpanEndColumn = 2}, srcInfoPoints = []}) "a")) (Symbol (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 8, srcSpanStartColumn = 3, srcSpanEndLine = 8, srcSpanEndColumn = 5}, srcInfoPoints = []}) "#*") [PVar (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 8, srcSpanStartColumn = 6, srcSpanEndLine = 8, srcSpanEndColumn = 7}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 8, srcSpanStartColumn = 6, srcSpanEndLine = 8, srcSpanEndColumn = 7}, srcInfoPoints = []}) "b")] (UnGuardedRhs (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 8, srcSpanStartColumn = 8, srcSpanEndLine = 8, srcSpanEndColumn = 11}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 8, srcSpanStartColumn = 8, srcSpanEndLine = 8, srcSpanEndColumn = 9}]}) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 8, srcSpanStartColumn = 10, srcSpanEndLine = 8, srcSpanEndColumn = 11}, srcInfoPoints = []}) (Int (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 8, srcSpanStartColumn = 10, srcSpanEndLine = 8, srcSpanEndColumn = 11}, srcInfoPoints = []}) 1 "1"))) Nothing]],[Comment False (SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 10, srcSpanStartColumn = 1, srcSpanEndLine = 10, srcSpanEndColumn = 36}) " This still does not work though:",Comment False (SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 11, srcSpanStartColumn = 1, srcSpanEndLine = 11, srcSpanEndColumn = 24}) " (#) :: a -> b -> Int",Comment False (SrcSpan {srcSpanFilename = "tests/examples/DoubleHashOp.hs", srcSpanStartLine = 12, srcSpanStartColumn = 1, srcSpanEndLine = 12, srcSpanEndColumn = 13}) " a # b = 2"])
